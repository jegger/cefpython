import ctypes, os

# If this is a debian package then package_dir is a symlink:
#   /usr/lib/pymodules/python2.7/cefpython3/
# The real directory in which cefpython files are located is:
#   /usr/share/pyshared/cefpython3/

# Package dir will be /usr/lib/pymodules/python2.7/cefpython3/
# when using the debian package. For the distutils setup it 
# will be /usr/local/lib/python2.7/dist-packages/cefpython3/.
package_dir = os.path.dirname(os.path.abspath(__file__))

# This loads the libcef.so library for the python process.
libcef_so = os.path.join(package_dir, "libcef.so")
ctypes.CDLL(libcef_so, ctypes.RTLD_GLOBAL)

# Other .so libraries may also be required.
# Loading the libffmpegsumo.so library is probably redundant to
# load for the python process, as it shows from testing. It is
# only loaded by the subprocess executable with the use of the
# LD_LIBRARY_PATH env variable. But just to be sure let's load
# it as well for future proof.
libffmpegsumo_so = os.path.join(package_dir, "libffmpegsumo.so")
ctypes.CDLL(libffmpegsumo_so, ctypes.RTLD_GLOBAL)

# This will allow the subprocess executable to load the libcef.so
# and libffmpeg.so libraries.
os.environ["LD_LIBRARY_PATH"] = package_dir

# This env variable will be returned by cefpython.GetModuleDirectory().
os.environ["CEFPYTHON3_PATH"] = package_dir

import sys
if 0x02070000 <=  sys.hexversion < 0x03000000:
    from . import cefpython_py27 as cefpython
else:
    raise Exception("Unsupported python version: " + sys.version)

__version__ = "%(APP_VERSION)s"
__author__ = "The CEF Python authors"
